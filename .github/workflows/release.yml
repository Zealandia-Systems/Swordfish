name: release
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  # pull_request event is required only for autolabeler
  pull_request:
    # Only following types are handled by the action, but one can default to all as well
    types: [opened, reopened, synchronize]
  # pull_request_target event is required for autolabeler to support PRs from forks
  pull_request_target:
    types: [opened, reopened, synchronize]

jobs:
  build:
    name: ${{matrix.config.name}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - { name: P1, machine-type: 1, machine-name: P1 }
          - { name: P2, machine-type: 2, machine-name: P2 }
          - { name: P3, machine-type: 3, machine-name: P3 }
          - { name: P4, machine-type: 4, machine-name: P4 }
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive
        
      - name: Install GCC
        uses: carlosperate/arm-none-eabi-gcc-action@v1
        id: arm-none-eabi-gcc-action
        with:
          release: '10.3-2021.10'

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          version: 1.10.0

      - name: CMake configure and build
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{runner.workspace}}/build
          build-type: Release
          target: uf2
          configure-options: -G Ninja -DCMAKE_TOOLCHAIN_FILE=${{runner.workspace}}/Swordfish/cmake/toolchain-gcc.cmake -DSWORDFISH_MACHINE_TYPE=${{matrix.config.machine-type}} -DSWORDFISH_MACHINE_NAME=${{matrix.config.machine-name}}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Swordfish-${{matrix.config.machine-name}}.uf2
          path: ${{runner.workspace}}/build/*.uf2

  update_release_draft:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # (Optional) GitHub Enterprise requires GHE_HOST variable set
      #- name: Set GHE_HOST
      #  run: |
      #    echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: update_release_draft
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3